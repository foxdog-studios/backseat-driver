#!/usr/bin/env zsh

setopt ERR_EXIT
setopt NO_UNSET
setopt PIPE_FAIL


# ==============================================================================
# = Configuration                                                              =
# ==============================================================================

root=$0:A:h:h

dst_dir=$HOME/.config/systemd/user

hat_controller_unit=hat_controller.service
hat_controller_src=$root/systemd/$hat_controller_unit
hat_controller_dst=$dst_dir/$hat_controller_unit

hci_unit=hci_hat_controller.service
hci_src=$root/systemd/$hci_unit
hci_dst=$dst_dir/$hci_unit


# ==============================================================================
# = Actions                                                                    =
# ==============================================================================

function action_install()
{
    print -- 'Installing...'

    local hat_controller_options="$1"

    # hci.service
    cp -fv $hci_src $hci_dst

    # hat_controller.service
    template $hat_controller_src \
             command $root/scripts/hat_controller \
             options "$hat_controller_options" \
             > $hat_controller_dst

    systemctl --user daemon-reload
}

function action_start()
{
    print -- 'Starting...'

    sudo systemctl start bluetooth.service

    # hci.service
    systemctl --user start $hci_unit

    # hat_controller.service
    systemctl --user start $hat_controller_unit
}

function action_stop()
{
    print -- 'Stopping...'

    # hat_controller.service
    systemctl --user stop $hat_controller_unit || true

    # hci.service
    systemctl --user  stop $hci_unit || true

    sudo systemctl stop bluetooth.service
}

function action_uninstall()
{
    print -- 'Uninstalling...'

    # hat_controller.service
    rm -fv $hat_controller_dst

    # hci.service
    rm -fv $hci_dst

    systemctl --user daemon-reload
}


# ==============================================================================
# = Helpers                                                                    =
# ==============================================================================

function template()
{
    local src=$1

    local i tag text
    local -T PATTERNS patterns ';'

    for i in {2..$#..2}; do
        tag=$@[$i]
        text=$@[(( $i + 1 ))]
        patterns+=( "s,{{$tag}},$text," )
    done

    sed $PATTERNS $src
}


# ==============================================================================
# = Command line interface                                                     =
# ==============================================================================

function usage()
{
    cat <<-'EOF'
		Control hat_controller's systemd units

		Usage:

		    $ systemd (install [HAT_CONTROLLER_OPTIONS...] | start | stop | uninstall)

		HAT_CONTROLLER_OPTIONS
		    Options passed the hat_controller executable.

	EOF
    exit 1
}

if (( $# == 0 )); then
    usage
fi

case $1 in
    install)   action=install   ;;
    start)     action=start     ;;
    stop)      action=stop      ;;
    uninstall) action=uninstall ;;
    *) usage ;;
esac

shift

if [[ $action != install ]] && (( $# != 0 )); then
    usage
fi

case $action in
    install)   action_install "$*" ;;
    start)     action_start        ;;
    stop)      action_stop         ;;
    uninstall) action_uninstall    ;;
esac

